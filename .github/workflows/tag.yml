name: Create Release Flow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database-name:
          - player
        database-password:
          - password
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432
    services:
        postgres:
          image: postgres:latest
          env:
            POSTGRES_DB: ${{ matrix.database-name }}
            POSTGRES_USER: ${{ matrix.database-user }}
            POSTGRES_PASSWORD: ${{ matrix.database-password }}
          ports:
            - 5432:5432
          # Set health checks to wait until postgres has started
          options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Package
          run: sudo apt-get install xvfb &&
            Xvfb :99 &>/dev/null & export DISPLAY=":99" &&
            mvn package
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Publish executable to Artifactory
          uses: actions/upload-artifact@v3
          with:
            name: version-executable
            path: target/Player-1.0.1-jar-with-dependencies.jar
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            body: |
              A new release has been created
            draft: false
            prerelease: false
        - name: Upload Release Asset
          id: upload_release_asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ./version-executable.zip
            asset_name: version-executable.zip
            asset_content_type: application/zip
        - name: Send some mail
          uses: dawidd6/action-send-mail@v3
          with:
            server_address: smtp.gmail.com
            port: 465
            username: ${{secrets.MAIL_USERNAME}}
            password: ${{secrets.MAIL_PASSWORD}}
            subject: A new Release requires new Release Notes
            body: Build job of ${{github.repository}} completed successfully!
            to: ${{secrets.MAIL_SENDER_TO}}
            from: Me
